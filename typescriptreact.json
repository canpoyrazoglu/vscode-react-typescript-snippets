{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Create React Native class component": {
		"prefix": "cccrn",
		"body": [
			"import React, { Component } from 'react';",
			"import { View, StyleSheet } from 'react-native';",
			"import { Dispatch } from 'redux';",
			"import { connect } from 'react-redux';",
			"",
			"type ${TM_FILENAME_BASE}Props = { ",
			"\t",
			"}",
			"",
			"type ${TM_FILENAME_BASE}DispatchProps = { ",
			"\t",
			"}",
			"",
			"type ${TM_FILENAME_BASE}State = { ",
			"\t",
			"}",
			"",
			"class ${TM_FILENAME_BASE} extends ${1:Component}<${TM_FILENAME_BASE}Props & ${TM_FILENAME_BASE}DispatchProps, ${TM_FILENAME_BASE}State>{",
			"",
			"\tconstructor(props:${TM_FILENAME_BASE}Props){",
			"\t\tsuper(props as any);",
			"\t}",
			"",
			"\trender(){",
			"\t\treturn <View style={styles.container}>",
			"",
			"\t\t</View>",
			"\t}",
			"",
			"}",
			"",
			"const styles = StyleSheet.create({",
			"\tcontainer:{",
			"",
			"\t}",
			"});",
			"",
			"function mapStateToProps(state:any, ownProps:Partial<${TM_FILENAME_BASE}Props>) : ${TM_FILENAME_BASE}Props {",
			"",
			"\treturn {",
			"\t\t...ownProps as Required<${TM_FILENAME_BASE}Props>",
			"\t}",
			"}",
			"",
			"function mapDispatchToProps(dispatch:Dispatch) : ${TM_FILENAME_BASE}DispatchProps {",
			"\treturn {",
			"\t",
			"\t}",
			"}",
			"",
			"export default connect(mapStateToProps, mapDispatchToProps)($TM_FILENAME_BASE)"
		],
		"description": "Create a component class for this file"
	},
    "Create React.js class component": {
		"prefix": "cccrw",
		"body": [
			"import React, { Component } from 'react';",
			"import { Dispatch } from 'redux';",
			"import { connect } from 'react-redux';",
            "import styles from './${TM_FILENAME_BASE}.module.css'",
			"",
			"type ${TM_FILENAME_BASE}Props = { ",
			"\t",
			"}",
			"",
			"type ${TM_FILENAME_BASE}DispatchProps = { ",
			"\t",
			"}",
			"",
			"type ${TM_FILENAME_BASE}State = { ",
			"\t",
			"}",
			"",
			"class ${TM_FILENAME_BASE} extends ${1:Component}<${TM_FILENAME_BASE}Props & ${TM_FILENAME_BASE}DispatchProps, ${TM_FILENAME_BASE}State>{",
			"",
			"\tconstructor(props:${TM_FILENAME_BASE}Props){",
			"\t\tsuper(props as any);",
			"\t}",
			"",
			"\trender(){",
			"\t\treturn <div className={styles['container']}>",
			"",
			"\t\t</div>",
			"\t}",
			"",
			"}",
			"",
			"function mapStateToProps(state:any, ownProps:Partial<${TM_FILENAME_BASE}Props>) {",
			"",
			"\treturn {",
			"\t\t",
			"\t}",
			"}",
			"",
			"function mapDispatchToProps(dispatch:Dispatch) : ${TM_FILENAME_BASE}DispatchProps {",
			"\treturn {",
			"\t",
			"\t}",
			"}",
			"",
			"export default connect(mapStateToProps, mapDispatchToProps)($TM_FILENAME_BASE)"
		],
		"description": "Create a component class for this file"
	},
	"Create stylesheet": {
		"prefix": "ss",
		"body": [
		
			"const styles = StyleSheet.create({",
			"\tcontainer:{",
			"",
			"\t}",
			"});",
		
		],
		"description": "Create a React Native stylesheet"
    },
    "Create functional component": {
		"prefix": "fc",
		"body": [
			"import React from 'react';",
            "import { StyleSheet, View } from 'react-native';",
            "",
            "",
            "type ${TM_FILENAME_BASE}Props = {",
            "",
            "};",
            "function ${TM_FILENAME_BASE}(props:${TM_FILENAME_BASE}Props){",
            "\treturn <View style={styles.container}></View>",
            "}",
            "",
            "",
            "const styles = StyleSheet.create({",
            "\tcontainer:{",
            "\t\t",
            "\t}",
            "});",
            "",
            "export default ${TM_FILENAME_BASE};"
		
		],
		"description": "Create a React Native stylesheet"
	},

}